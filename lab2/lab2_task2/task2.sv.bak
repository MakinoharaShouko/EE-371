module task2(SW, HEX0, HEX2, HEX4, HEX5, KEY[0]);
	input logic [9:0] SW;
	input logic KEY[0];
	output logic [6:0] HEX0, HEX2, HEX4, HEX5;
	logic [3:0] q;
	
	ram32x4 ram(.address(SW[8:4]), .clock(KEY[0]), .data(SW[3:0]), .wren(SW[9]), .q);
	display dis(SW, q, HEX0, HEX2, HEX4, HEX5);
endmodule

module task2_testbench();
	logic [9:0] SW;
	logic KEY[0];
	logic [6:0] HEX0, HEX2, HEX4, HEX5;
	
	task2 t2(SW, HEX0, HEX2, HEX4, HEX5, KEY[0]);
	
	initial begin
		SW = 0101010011; KEY[0] = 0; #10
							  KEY[0] = 1; #10
		SW = 1101010011; KEY[0] = 0; #10
		SW = 0101011111; KEY[0] = 1; #10
							  KEY[0] = 0; #10
		SW = 1101011111; KEY[0] = 1; #10
		SW = 0101011111; KEY[0] = 0; #10
							  KEY[0] = 1; #10
		$stop;
	end
endmodule
